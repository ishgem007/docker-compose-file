version: "3"
services:
  nginx:
      image: nginx:alpine
      volumes:
        - "./docker/nginx/sites/default.conf:/etc/nginx/conf.d/default.conf"
        - "./:/var/www/html"
      ports:
        - 8080:80
        - "433:433"
      container_name: nginx
      restart: always
      environment:
        - NGINX_HOST=paulund.test
      networks:
        - app-network
 
  app:
      image: laravel-app
      container_name: laravel-app
      build:
        context: .
        dockerfile: docker/Dockerfile
      depends_on:
        - redis
        - mysql
      ports:
        - 8080:80
      links:
        - elasticsearch
      networks:
        - app-network
      volumes:
        - .:/var/www/html
      environment:
        APP_ENV: local
        CONTAINER_ROLE: app
        CACHE_DRIVER: redis
        SESSION_DRIVER: redis
        QUEUE_DRIVER: redis
        REDIS_HOST: redis

  scheduler:
      image: laravel-app
      container_name: laravel-scheduler
      depends_on:
        - app
      volumes:
        - .:/var/www/html
      environment:
        APP_ENV: local
        CONTAINER_ROLE: scheduler
        CACHE_DRIVER: redis
        SESSION_DRIVER: redis
        QUEUE_DRIVER: redis
        REDIS_HOST: redis

  queue:
      image: laravel-app
      container_name: laravel-queue
      depends_on:
        - app
      volumes:
        - .:/var/www/html
      environment:
        APP_ENV: local
        CONTAINER_ROLE: queue
        CACHE_DRIVER: redis
        SESSION_DRIVER: redis
        QUEUE_DRIVER: redis
        REDIS_HOST: redis
  redis:
      container_name: laravel-redis
      image: redis:4-alpine
      networks:
        - app-network
      ports:
        - 16379:6379
      volumes:
        - redis:/data
  mysql:
      container_name: laravel-mysql
      image: mysql:5.7
      networks:
        - app-network
      ports:
        - 13306:3306
      volumes:
        - mysql:/var/lib/mysql
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}'
        MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
  
  elasticsearch:
      container_name: elasticsearch1
      image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
      environment:
        - node.name=elasticsearch1
        - cluster.name=docker-cluster
        - cluster.initial_master_nodes=elasticsearch1
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
        - http.cors.enabled=true
        - http.cors.allow-origin=*
        - network.host=_eth0_
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - es01-data:/usr/share/elasticsearch/data
      networks:
        - app-network
      ports:
        - 9200:9200
  kibana:
      container_name: kb-container
      image: docker.elastic.co/kibana/kibana:7.6.1
      environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch1:9200/
      networks:
        - app-network
      depends_on:
        - elasticsearch
      ports:
        - 5601:5601
  
  networks:
    app-network:
      driver: bridge
 
  volumes:
      redis:
          driver: "local"
      es01-data:
           driver: "local"
      mysql:
          driver: "local"
