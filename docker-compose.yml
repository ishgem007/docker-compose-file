version: "3.7"
services:

 #Laravel App  
  app:
      image: laravel-app
      container_name: laravel-app
      build:
        context: .
        dockerfile: docker/Dockerfile
      depends_on:
        - redis
        - mysql
      ports:
        - 8080:80
      links:
        - elasticsearch
      networks:
        - app-network
      volumes:
        - .:/var/www/html
      environment:
        APP_ENV: local
        CONTAINER_ROLE: app
        CACHE_DRIVER: redis
        SESSION_DRIVER: redis
        QUEUE_DRIVER: redis
        REDIS_HOST: redis

  #MySQL Data
  mysql:
      container_name: laravel-mysql
      image: mysql:8.0
      networks:
        - app-network
      ports:
        - 13306:3306
      volumes:
        - mysql:/var/lib/mysql
      environment:
        MYSQL_DATABASE: lara-data
        MYSQL_ROOT_PASSWORD: lara_root_pass
        MYSQL_USER: lara_user
        MYSQL_PASSWORD: lara_pass_key

 #Laravel App scheduler 
  scheduler:
      image: laravel-app
      container_name: laravel-scheduler
      depends_on:
        - app
      volumes:
        - .:/var/www/html
      environment:
        APP_ENV: local
        CONTAINER_ROLE: scheduler
        CACHE_DRIVER: redis
        SESSION_DRIVER: redis
        QUEUE_DRIVER: redis
        REDIS_HOST: redis

  #Laravel queue
  queue:
      image: laravel-app
      container_name: laravel-queue
      depends_on:
        - app
      volumes:
        - .:/var/www/html
      environment:
        APP_ENV: local
        CONTAINER_ROLE: queue
        CACHE_DRIVER: redis
        SESSION_DRIVER: redis
        QUEUE_DRIVER: redis
        REDIS_HOST: redis

  #Laravel Redis 
  redis:
      container_name: laravel-redis
      image: redis:4-alpine
      networks:
        - app-network
      ports:
        - 16379:6379
      volumes:
        - redis:/data

  #Elasticsearch Installation
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  
  #kibana Installation
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch                                  

  volumes:
    redis:
    mysql:
    elasticsearch-data:

  networks:
    app-network:
        


